apply plugin: HoopoeAssemblyPlugin

// todo do to generate for releases
apply plugin: 'rebel'

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.5'
    compile 'net.bytebuddy:byte-buddy:1.4.16'
    compile project(':hoopoe-classloader')

    runtime 'ch.qos.logback:logback-classic:1.1.7'

    provided project(':hoopoe-api')
    provided 'org.projectlombok:lombok:1.14.8'

    testCompile 'junit:junit:4.12'
    testCompile 'com.ea.agentloader:ea-agent-loader:1.0.0'
    testCompile 'org.reflections:reflections:0.9.10'
    testCompile 'com.tngtech.java:junit-dataprovider:1.10.0'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}

task prepareBootstrapJar(type: Zip) {
    archiveName "hoopoe-bootstrap.jar"
    includeEmptyDirs false
    from (project.sourceSets.main.output.classesDir) {
        include '**/hoopoe/core/bootstrap/*.class'
    }
    destinationDir project.sourceSets.main.output.resourcesDir
}

task cleanupBootstrapJar(type: Delete) {
  delete "${project.sourceSets.main.output.classesDir}/hoopoe/core/bootstrap"
}

tasks.cleanupBootstrapJar.dependsOn(prepareBootstrapJar)
tasks.jar.dependsOn(cleanupBootstrapJar)
tasks.compileTestJava.dependsOn(cleanupBootstrapJar)

rebel {
    classpath {
        omitDefaultClassesDir = true

        resource {}

        resource {
            directory = project.sourceSets.main.output.classesDir
            excludes = ['**/hoopoe/core/bootstrap/**']
        }
    }
}